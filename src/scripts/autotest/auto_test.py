import os
import pandas as pd
import logging
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤ –≤ –∫–æ—Ä–Ω–µ–≤–æ–º –∫–∞—Ç–∞–ª–æ–≥–µ –ø—Ä–æ–µ–∫—Ç–∞ BIGdata/logs
LOG_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), '../../../logs'))
os.makedirs(LOG_DIR, exist_ok=True)
logging.basicConfig(
    filename=os.path.join(LOG_DIR, "autotest.log"),
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s"
)

def list_xlsx_files(directory):
    return [f for f in os.listdir(directory) if f.endswith(".xlsx")]

def choose_file(files, prompt):
    print(prompt)
    for i, file in enumerate(files, 1):
        print(f"{i}. {file}")
    while True:
        try:
            index = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∞–π–ª–∞: "))
            if 1 <= index <= len(files):
                return files[index - 1]
            else:
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        except ValueError:
            print("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")

def compare_ads(reference_df, test_df):
    matched = 0
    mismatched = 0
    total = 0
    details = []

    ref_dict = reference_df.set_index("url").to_dict(orient="index")
    test_dict = test_df.set_index("url").to_dict(orient="index")

    for url, ref_data in ref_dict.items():
        total += 1
        if url not in test_dict:
            details.append(f"[‚ùå] –ù–µ –Ω–∞–π–¥–µ–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ: {url}")
            mismatched += 1
            continue

        test_data = test_dict[url]
        differences = []
        for field in ["floor", "price", "total_meters", "rooms_count"]:
            ref_val = ref_data.get(field)
            test_val = test_data.get(field)
            if ref_val != test_val:
                differences.append(f"{field}: —ç—Ç–∞–ª–æ–Ω={ref_val}, –Ω–∞–π–¥–µ–Ω–æ={test_val}")

        if differences:
            details.append(f"[‚ö†Ô∏è] –ù–µ—Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –≤ {url}:\n    " + "\n    ".join(differences))
            mismatched += 1
        else:
            matched += 1

    return total, matched, mismatched, details

def main():
    logging.info("üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ç–µ—Å—Ç–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π")
    start_time = time.time()

    BASE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), '../../../'))
    atest_dir = os.path.join(BASE_DIR, "atest")
    raw_dir = os.path.join(BASE_DIR, "raw")

    atest_files = list_xlsx_files(atest_dir)
    raw_files = list_xlsx_files(raw_dir)

    if not atest_files:
        print("‚ùå –í –ø–∞–ø–∫–µ 'atest' –Ω–µ—Ç .xlsx —Ñ–∞–π–ª–æ–≤")
        return
    if not raw_files:
        print("‚ùå –í –ø–∞–ø–∫–µ 'raw' –Ω–µ—Ç .xlsx —Ñ–∞–π–ª–æ–≤")
        return

    ref_file = choose_file(atest_files, "–í—ã–±–µ—Ä–∏—Ç–µ —ç—Ç–∞–ª–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –∏–∑ –ø–∞–ø–∫–∏ 'atest':")
    test_file = choose_file(raw_files, "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –ø–∞—Ä—Å–µ—Ä–∞ –∏–∑ –ø–∞–ø–∫–∏ 'raw':")

    ref_path = os.path.join(atest_dir, ref_file)
    test_path = os.path.join(raw_dir, test_file)

    try:
        reference_df = pd.read_excel(ref_path)
        test_df = pd.read_excel(test_path)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤: {e}")
        return

    required_cols = ["url", "floor", "price", "total_meters", "rooms_count"]
    if not all(col in reference_df.columns for col in required_cols):
        print(f"‚ùå –≠—Ç–∞–ª–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–æ–ª–æ–Ω–∫–∏: {required_cols}")
        return
    if not all(col in test_df.columns for col in required_cols):
        print(f"‚ùå –§–∞–π–ª –ø–∞—Ä—Å–µ—Ä–∞ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–æ–ª–æ–Ω–∫–∏: {required_cols}")
        return

    print(f"\nüìò –≠—Ç–∞–ª–æ–Ω–Ω—ã–π —Ñ–∞–π–ª: {ref_file} —Å–æ–¥–µ—Ä–∂–∏—Ç {len(reference_df)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π")
    print(f"üìó –§–∞–π–ª –ø–∞—Ä—Å–µ—Ä–∞: {test_file} —Å–æ–¥–µ—Ä–∂–∏—Ç {len(test_df)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π\n")

    logging.info(f"–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤: —ç—Ç–∞–ª–æ–Ω = {ref_file}, –ø—Ä–æ–≤–µ—Ä—è–µ–º—ã–π = {test_file}")
    logging.info(f"–û–±—ä—è–≤–ª–µ–Ω–∏–π –≤ —ç—Ç–∞–ª–æ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ: {len(reference_df)}")
    logging.info(f"–û–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º–æ–º —Ñ–∞–π–ª–µ: {len(test_df)}")

    total, matched, mismatched, details = compare_ads(reference_df, test_df)

    print(f"üîç –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π: {total}")
    print(f"‚úÖ –°–æ–≤–ø–∞–¥–∞—é—Ç: {matched}")
    print(f"‚ùå –ù–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç / –Ω–µ –Ω–∞–π–¥–µ–Ω—ã: {mismatched}\n")
    for d in details:
        print(d)

    end_time = time.time()
    duration = end_time - start_time
    mins, secs = divmod(duration, 60)

    log_message = (
        f"\nüìä –ò—Ç–æ–≥–∏ –∞–≤—Ç–æ—Ç–µ—Å—Ç–∞:\n"
        f"  –≠—Ç–∞–ª–æ–Ω–Ω—ã–π —Ñ–∞–π–ª: {ref_file} ({len(reference_df)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π)\n"
        f"  –§–∞–π–ª –ø–∞—Ä—Å–µ—Ä–∞: {test_file} ({len(test_df)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π)\n"
        f"  –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: {total}\n"
        f"  –°–æ–≤–ø–∞–ª–æ: {matched}\n"
        f"  –ù–µ —Å–æ–≤–ø–∞–ª–æ/–Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {mismatched}\n"
        f"  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {int(mins)} –º–∏–Ω {int(secs)} —Å–µ–∫\n"
    )
    logging.info(log_message)
    for entry in details:
        logging.info(entry)

if __name__ == "__main__":
    main()
